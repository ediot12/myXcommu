<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.QnABoardMapper">


	<select id="getQuestionBoardList" resultType="org.zerock.domain.QuestionBoardDTO">
		<!-- select * from tbl_question_board order by qna_board_seq desc -->
		<!-- select
			   a.*,
			   nvl(b.cnt, 0) as reply_cnt
			from
			    tbl_question_board a
			left outer join
			    (
			        select
			            board_seq,
			            count(*) as cnt
			        from    
			            tbl_board_reply
			        group by
			            board_seq
			    ) b
			on 
			    a.qna_board_seq = b.board_seq
			order by
			    a.qna_board_seq desc -->
		select
		    b.*,
		    nvl(a.cnt,0) as reply_cnt
		from
		(
		select
		    board_seq,
		    count(*) as cnt
		from    
		    tbl_board_reply
		group by
		    board_seq
		    ) a
		right outer join
		(
		    select
		        a.*,
		        nvl(b.cnt, 0) as recommand_cnt
		    from    
		        tbl_question_board a
		    left outer join
		        (
		            select
		                board_seq,
		                count(*) as cnt
		            from
		                tbl_board_recommand
		            where
		                board_type = 2
		            group by
		                board_seq
		        ) b
		    on 
		        a.qna_board_seq = b.board_seq    
		) b
		on
		    a.board_seq = b.qna_board_seq
		order by
            qna_board_seq desc
	</select>
	
	<select id="getQuestionBySeq" resultType="org.zerock.domain.QuestionBoardDTO" parameterType="Integer">
		<!-- select 
			*
		from	
			tbl_question_board
		where
			qna_board_seq = #{seq} -->
			
		select
		    a.*,
		    nvl(b.cnt, 0) as recommand_cnt
		from
		    tbl_question_board a
		left outer join
		(        
		    select
		        board_seq,
		        count(*) as cnt
		    from    
		        tbl_board_recommand
		    group by
		        board_seq  
		) b
		on 
		    a.qna_board_seq = b.board_seq
		where
			qna_board_seq = #{seq}
	</select>
	
	<select id="getRegiUserInfor" resultType="org.zerock.domain.MemberVO" parameterType="String">
		select * from tbl_member where userid = #{userId}
	</select>
	
	<select id="getQuestionReplyList" resultType="org.zerock.domain.BoardReplyDTO" parameterType="java.util.HashMap">
		<!-- select 
			*
		from
			tbl_board_reply
		where
			board_type = #{type}
			and board_seq = #{seq}
		order by
    		regdate ASC -->
    		
    		select
			    a.*,
			    nvl(b.empathy_yes ,0) as empathy_yes,
			    nvl(b.empathy_no, 0) as empathy_no
			from
			    tbl_board_reply a
			left outer join
			(
			    select
			            a.reply_seq,
			            a.cnt as empathy_yes,
			            b.cnt as empathy_no
			        from        
			        (
			        select
			            a.reply_seq,
			            nvl(b.cnt,0) as cnt
			        from
			            tbl_reply_empathy a
			        left outer join
			        (
			        select
			            reply_seq,
			            count(*) as cnt
			        from
			            tbl_reply_empathy
			        where  
			            empathy_xy = 1
			        group by
			            reply_seq
			        ) b
			        on
			            a.reply_seq = b.reply_seq
			        group by
			            a.reply_seq, cnt
			        ) a
			        left outer join
			        (
			        select
			            a.reply_seq,
			            nvl(b.cnt,0) as cnt
			        from
			            tbl_reply_empathy a
			        left outer join
			        (
			        select
			            reply_seq,
			            count(*) as cnt
			        from
			            tbl_reply_empathy
			        where  
			            empathy_xy = 2
			        group by
			            reply_seq
			        ) b
			        on
			            a.reply_seq = b.reply_seq
			        group by
			            a.reply_seq, cnt
			        ) b
			        on
			            a.reply_seq = b.reply_seq
			) b
			on
			    a.reply_seq = b.reply_seq
			where
						board_type = #{type}
						and board_seq = #{seq}
			    
			order by
			    		regdate ASC
	</select>
	
	<select id="selectRecommandQuestionUserRecord" resultType="Integer" parameterType="java.util.HashMap">
		select 
			count(*)
		from
			tbl_board_recommand
		where
			board_type = '2'
			and board_seq = #{seq}
			and recommand_user = #{user}
	</select>
	
	<select id="countEmpathyRecordToUser" resultType="Integer" parameterType="java.util.HashMap">
		select 
			count(*)
		from
			tbl_reply_empathy
		where
			reply_seq = #{reply_seq}
			and recommand_user = #{recommand_user}
	</select>
	
	<select id="currSequenceVal" resultType="Integer">
		select qna_board_seq.currval from dual
	</select>


	<insert id="registerQuestion" parameterType="java.util.HashMap">
		insert into	tbl_question_board 
			( qna_board_seq, division, subject, content, writer ) 
		values ( qna_board_seq.nextval, #{division}, #{subject}, #{content}, #{writer} )
	</insert>
	
	<insert id="registerReply" parameterType="java.util.HashMap">
		insert into tbl_board_reply
			( board_type, board_seq, replyer, reply, reply_seq )
		values ( #{board_type}, #{board_seq}, #{replyer}, #{reply}, reply_seq.nextval )
	</insert>
	
	<!-- 차후에 recommandBoard로 바꿀수도 있을꺼임 -->
	<insert id="recommandQuestion" parameterType="java.util.HashMap">
		insert into tbl_board_recommand values
			( '2', #{seq} , #{user} )
	</insert>
	
	<insert id="empathyReply" parameterType="java.util.HashMap">
		insert into tbl_reply_empathy values
			( #{board_type}, #{board_seq}, #{reply_seq}, #{recommand_user}, #{empathy_type} )
	</insert>
	
	<update id="updateQuestionStatus" parameterType="Integer">
		update tbl_question_board
			set
				status = 'Y'
			where
				qna_board_seq = #{seq}
	</update>
	
	<update id="updateQuestion" parameterType="java.util.HashMap">
		update tbl_question_board
			set
				division = #{division},
				subject = #{subject},
				content = #{content}
		where
			qna_board_seq = #{seq}
	</update>
	 
		
	<delete id="deleteQuestion" parameterType="Integer">
		delete tbl_question_board
			where
				qna_board_seq = #{seq}
	</delete>
	
	<delete id="deleteQuestionAllReply" parameterType="java.util.HashMap">
		delete tbl_board_reply
			where
				board_type = #{type}
				and board_seq = #{seq}
				
	</delete>
	
	<delete id="deleteQuestionReplyRecord" parameterType="java.util.HashMap">
		delete tbl_board_recommand
			where
				board_type = #{type}
				and board_seq = #{seq}
	</delete>


</mapper>